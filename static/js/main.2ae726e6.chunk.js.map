{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","paginate","setCurrentPage","amountOfPages","Math","ceil","isFirstPage","lastPage","length","isLastPage","className","classNames","disabled","href","onClick","current","map","pageNumber","active","items","App","useState","itemsPerPage","setItemsPerPage","totalItems","indexOfFirstItem","indexofLastItem","currentItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAC,EACI,EADJA,eAEMC,EAAgBZ,EAAW,EAAGa,KAAKC,KAAKP,EAAQC,IAChDO,EAAcN,IAAgBG,EAAc,GAC5CI,EAAWJ,EAAcA,EAAcK,OAAS,GAChDC,EAAaT,IAAgBO,EAkBnC,OACE,qBAAIG,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUN,IAFd,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACLC,QA3BW,WACjBZ,GAAe,SAAAa,GACb,OAAmB,IAAZA,EACHA,EAAU,EACVA,MAwBA,gBAAeT,EALjB,oBAUDH,EAAca,KAAK,SAAAC,GAAU,OAC5B,oBACEP,UAAWC,IACT,YACA,CAAEO,OAAQD,IAAejB,IAH7B,SAME,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAAMb,EAASgB,IAJ1B,SAMGA,SAKP,oBAAIP,UAAWC,IACb,YACA,CAAEC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QArDW,WACjBZ,GAAe,SAAAa,GACb,OAAOA,IAAYR,EACfQ,EAAU,EACVA,MA4CF,wBC3EFI,EAAQ5B,EAAW,EAAG,IACzByB,KAAI,SAAArB,GAAC,qBAAYA,MAEPyB,EAAgB,WAC3B,MAAsCC,mBAAiB,GAAvD,mBAAOrB,EAAP,KAAoBE,EAApB,KACA,EAAwCmB,mBAAiB,GAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAaL,EAAMX,OACnBiB,EAAmBzB,EAAcsB,EAAeA,EAChDI,EAAkB1B,EAAcsB,GAAgBE,EAClDxB,EAAcsB,EACdE,EACEG,EAAeR,EAAMS,MAAMH,EAAkBC,GAQnD,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiCyB,EAAmB,EADpD,cAC2DC,EAD3D,eACiFF,EADjF,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOR,EACPS,SApBW,SAACC,GACpBT,GAAiBS,EAAMC,OAAOH,OAC9B5B,EAAe,IAaT,UAOE,wBAAQ4B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAO0B,EACPzB,QAASuB,EACTtB,YAAaA,EACbC,SAvCW,SAACgB,GAAD,OAAwBf,EAAee,IAwClDf,eAAgBA,IAGlB,6BACGyB,EAAaX,KAAI,SAACmB,GAAD,OAChB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC/DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2ae726e6.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { Dispatch, SetStateAction } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  paginate: (number: number) => void,\n  setCurrentPage: Dispatch<SetStateAction<number>>,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  paginate,\n  setCurrentPage,\n}) => {\n  const amountOfPages = getNumbers(1, Math.ceil(total / perPage));\n  const isFirstPage = currentPage === amountOfPages[0];\n  const lastPage = amountOfPages[amountOfPages.length - 1];\n  const isLastPage = currentPage === lastPage;\n\n  const handlePrev = () => {\n    setCurrentPage(current => {\n      return current !== 1\n        ? current - 1\n        : current;\n    });\n  };\n\n  const handleNext = () => {\n    setCurrentPage(current => {\n      return current !== lastPage\n        ? current + 1\n        : current;\n    });\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: isFirstPage },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={handlePrev}\n          aria-disabled={isFirstPage}\n        >\n          «\n        </a>\n      </li>\n      {amountOfPages.map((pageNumber => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: pageNumber === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => paginate(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      )))}\n\n      <li className={classNames(\n        'page-item',\n        { disabled: isLastPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [itemsPerPage, setItemsPerPage] = useState<number>(5);\n\n  const totalItems = items.length;\n  const indexOfFirstItem = currentPage * itemsPerPage - itemsPerPage;\n  const indexofLastItem = currentPage * itemsPerPage <= totalItems\n    ? currentPage * itemsPerPage\n    : totalItems;\n  const currentItems = items.slice(indexOfFirstItem, indexofLastItem);\n\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n  const handleSelect = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfFirstItem + 1} - ${indexofLastItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        paginate={paginate}\n        setCurrentPage={setCurrentPage}\n      />\n\n      <ul>\n        {currentItems.map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}